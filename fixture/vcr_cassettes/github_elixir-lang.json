[
  {
    "request": {
      "body": "",
      "headers": {
        "User-agent": "Beni beni@beni.org"
      },
      "method": "get",
      "options": [],
      "request_body": "",
      "url": "https://api.github.com/repos/elixir-lang/elixir/issues"
    },
    "response": {
      "body": "[{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4667\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4667/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4667/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4667/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/pull/4667\",\"id\":156181911,\"number\":4667,\"title\":\"Fix #3634\",\"user\":{\"login\":\"antipax\",\"id\":56482,\"avatar_url\":\"https://avatars.githubusercontent.com/u/56482?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/antipax\",\"html_url\":\"https://github.com/antipax\",\"followers_url\":\"https://api.github.com/users/antipax/followers\",\"following_url\":\"https://api.github.com/users/antipax/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/antipax/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/antipax/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/antipax/subscriptions\",\"organizations_url\":\"https://api.github.com/users/antipax/orgs\",\"repos_url\":\"https://api.github.com/users/antipax/repos\",\"events_url\":\"https://api.github.com/users/antipax/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/antipax/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":0,\"created_at\":\"2016-05-23T00:25:53Z\",\"updated_at\":\"2016-05-23T00:27:07Z\",\"closed_at\":null,\"pull_request\":{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/pulls/4667\",\"html_url\":\"https://github.com/elixir-lang/elixir/pull/4667\",\"diff_url\":\"https://github.com/elixir-lang/elixir/pull/4667.diff\",\"patch_url\":\"https://github.com/elixir-lang/elixir/pull/4667.patch\"},\"body\":\"This should fix the issue with umbrella deps, but also any future SCMs that exhibit similar issues. \\r\\n\\r\\nI'm not 100% on this. I first did a check against `Mix.Project.config()[:app]` in [`Mix.SCM.Path.accepts_options/2`](https://github.com/elixir-lang/elixir/blob/master/lib/mix/lib/mix/scm/path.ex#L21) and raised if it was the same as `app`, but that seemed like the wrong place to fix the issue.\\r\\n\\r\\nbtw, I tracked the infinite recursion to [`Mix.Dep.Fetcher.do_with_depending/2`](https://github.com/elixir-lang/elixir/blob/master/lib/mix/lib/mix/dep/fetcher.ex#L136).\\r\\n\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4662\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4662/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4662/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4662/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/pull/4662\",\"id\":156164032,\"number\":4662,\"title\":\"Add support for OTP 19 map typespecs\",\"user\":{\"login\":\"ericmj\",\"id\":316890,\"avatar_url\":\"https://avatars.githubusercontent.com/u/316890?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/ericmj\",\"html_url\":\"https://github.com/ericmj\",\"followers_url\":\"https://api.github.com/users/ericmj/followers\",\"following_url\":\"https://api.github.com/users/ericmj/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/ericmj/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/ericmj/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/ericmj/subscriptions\",\"organizations_url\":\"https://api.github.com/users/ericmj/orgs\",\"repos_url\":\"https://api.github.com/users/ericmj/repos\",\"events_url\":\"https://api.github.com/users/ericmj/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/ericmj/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":13,\"created_at\":\"2016-05-22T17:55:55Z\",\"updated_at\":\"2016-05-22T22:43:50Z\",\"closed_at\":null,\"pull_request\":{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/pulls/4662\",\"html_url\":\"https://github.com/elixir-lang/elixir/pull/4662\",\"diff_url\":\"https://github.com/elixir-lang/elixir/pull/4662.diff\",\"patch_url\":\"https://github.com/elixir-lang/elixir/pull/4662.patch\"},\"body\":\"  * %{required(foo) => bar} and %{optional(foo) => bar} forms are added\\r\\n  * %{foo => bar} is deprecated in favor of the above forms\\r\\n  * %{...} is added to mean any map\\r\\n  * %{} now means empty map\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4656\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4656/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4656/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4656/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/4656\",\"id\":156060925,\"number\":4656,\"title\":\"mix xref --list file\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Mix\",\"name\":\"App:Mix\",\"color\":\"CCCCCC\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Enhancement\",\"name\":\"Kind:Enhancement\",\"color\":\"009800\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Note:Discussion\",\"name\":\"Note:Discussion\",\"color\":\"bfdadc\"}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"milestone\":{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/17\",\"html_url\":\"https://github.com/elixir-lang/elixir/milestones/v1.3.0\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/17/labels\",\"id\":1442016,\"number\":17,\"title\":\"v1.3.0\",\"description\":\"\",\"creator\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":9,\"closed_issues\":26,\"state\":\"open\",\"created_at\":\"2015-12-03T12:25:01Z\",\"updated_at\":\"2016-05-22T21:51:29Z\",\"due_on\":null,\"closed_at\":null},\"comments\":12,\"created_at\":\"2016-05-20T22:16:19Z\",\"updated_at\":\"2016-05-22T09:12:11Z\",\"closed_at\":null,\"body\":\"Hi @tonini (from Alchemist) and @msaraiva (from Atom),\\r\\n\\r\\n@antipax is working on a feature in Elixir v1.3 that would allow you to list all functions being called on a given file. For example:\\r\\n\\r\\n    mix xref --list lib/foo.ex\\r\\n    Foo.bar/1:7\\r\\n    Bar.baz/1:19\\r\\n\\r\\nDo you think such feature would be useful for Emacs and/or Atom? If there is an interest, let's discuss how it should work and its format. If there is no interesting, it is less code for us to write. :)\\r\\n\\r\\nHave a good weekend!\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4617\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4617/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4617/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4617/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/4617\",\"id\":154645367,\"number\":4617,\"title\":\"Update to Erlang 19\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir\",\"name\":\"App:Elixir\",\"color\":\"CCCCCC\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Enhancement\",\"name\":\"Kind:Enhancement\",\"color\":\"009800\"}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":10,\"created_at\":\"2016-05-13T06:51:53Z\",\"updated_at\":\"2016-05-23T03:59:21Z\",\"closed_at\":null,\"body\":\"Changes that can be done at any time:\\r\\n\\r\\n* [ ] Support new Erlang typespec map syntax\\r\\n\\r\\nChanges that require exclusive Erlang 19 support:\\r\\n\\r\\n* [ ] Use map:take/2\\r\\n* [ ] Use io_lib:scan_format in Logger\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4573\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4573/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4573/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4573/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/4573\",\"id\":152333146,\"number\":4573,\"title\":\"Inconsistent behaviour in parallel require: Tests with same module name are compiled, depending on the naming order of files\",\"user\":{\"login\":\"eksperimental\",\"id\":9133420,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9133420?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/eksperimental\",\"html_url\":\"https://github.com/eksperimental\",\"followers_url\":\"https://api.github.com/users/eksperimental/followers\",\"following_url\":\"https://api.github.com/users/eksperimental/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/eksperimental/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/eksperimental/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/eksperimental/subscriptions\",\"organizations_url\":\"https://api.github.com/users/eksperimental/orgs\",\"repos_url\":\"https://api.github.com/users/eksperimental/repos\",\"events_url\":\"https://api.github.com/users/eksperimental/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/eksperimental/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir\",\"name\":\"App:Elixir\",\"color\":\"CCCCCC\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Enhancement\",\"name\":\"Kind:Enhancement\",\"color\":\"009800\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Level:Intermediate\",\"name\":\"Level:Intermediate\",\"color\":\"fad8c7\"}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"milestone\":{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/17\",\"html_url\":\"https://github.com/elixir-lang/elixir/milestones/v1.3.0\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/17/labels\",\"id\":1442016,\"number\":17,\"title\":\"v1.3.0\",\"description\":\"\",\"creator\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":9,\"closed_issues\":26,\"state\":\"open\",\"created_at\":\"2015-12-03T12:25:01Z\",\"updated_at\":\"2016-05-22T21:51:29Z\",\"due_on\":null,\"closed_at\":null},\"comments\":5,\"created_at\":\"2016-05-01T18:32:00Z\",\"updated_at\":\"2016-05-18T12:55:25Z\",\"closed_at\":null,\"body\":\"I got bitten by this bug in the parallel compiler, and it took quite some time to understand what was going on.\\r\\nI would consider it critical as test as passing when they should not.\\r\\n \\r\\nI had a test I knew it was supposed to fail due to a change in my code, and realized it was not changing so I thought my library was wrong... but nope.. it was mix passing the test when it shouldn't.\\r\\nlater i found out It was sharing the same name as another test...\\r\\nthen I tried to replicate this in a test case project, but I was getting different results. \\r\\nTo make a long story short, the name of the files definitely affects the results.\\r\\nSee `run.sh` proof of concept script and the extraneous behaviour.\\r\\n\\r\\nRun this script: https://raw.githubusercontent.com/eksperimental/elixir_mix_bug/master/run.sh\\r\\nProject repo is here: https://github.com/eksperimental/elixir_mix_bug\\r\\nOutput results: https://gist.github.com/eksperimental/acff3fa8790848418e4779feb0fb9005\\r\\n\\r\\n### Environment\\r\\nUbuntu Linux 32bits, 2 cores.\\r\\nErlang/OTP 18 [erts-7.3] [source] [smp:2:2] [async-threads:10] [kernel-poll:false]\\r\\nElixir 1.2.4\\r\\n\\r\\n### Current behavior\\r\\nDefine two tests with the same module name, and depending on the order the files are named, it will either give:\\r\\n- CompileError\\r\\n- It will execute predominantly one test\\r\\n- It will execute predominantly another test\\r\\n\\r\\nbut if you run it many time, you will eventually obtain a different result.\\r\\n\\r\\n### Expected behavior\\r\\n\\r\\nIt should never run any tests (consistently) and give CompileError\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4546\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4546/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4546/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4546/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/4546\",\"id\":150418581,\"number\":4546,\"title\":\"Document OTP behaviours\",\"user\":{\"login\":\"michalmuskala\",\"id\":477062,\"avatar_url\":\"https://avatars.githubusercontent.com/u/477062?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/michalmuskala\",\"html_url\":\"https://github.com/michalmuskala\",\"followers_url\":\"https://api.github.com/users/michalmuskala/followers\",\"following_url\":\"https://api.github.com/users/michalmuskala/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/michalmuskala/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/michalmuskala/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/michalmuskala/subscriptions\",\"organizations_url\":\"https://api.github.com/users/michalmuskala/orgs\",\"repos_url\":\"https://api.github.com/users/michalmuskala/repos\",\"events_url\":\"https://api.github.com/users/michalmuskala/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/michalmuskala/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir\",\"name\":\"App:Elixir\",\"color\":\"CCCCCC\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Enhancement\",\"name\":\"Kind:Enhancement\",\"color\":\"009800\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Level:Intermediate\",\"name\":\"Level:Intermediate\",\"color\":\"fad8c7\"}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":1,\"created_at\":\"2016-04-22T16:46:23Z\",\"updated_at\":\"2016-05-13T07:38:28Z\",\"closed_at\":null,\"body\":\"Elixir declares callbacks of `GenServer` and `GenEvent` even though the underlying code is using `@behaviour :gen_server` or `:gen_event`. I see this mainly as documentation effort. \\r\\n\\r\\nWe should document `Application` and `Supervisor`'s callbacks in a similar fashion. Today one has to do to the erlang docs to find it properly described.\\r\\n\\r\\nA thing to consider is if we should keep `@behaviour :gen_server` or switch to `GenServer`.\\r\\n\\r\\n\\\\cc @josevalim @fishcakez \"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4543\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4543/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4543/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4543/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/4543\",\"id\":150229153,\"number\":4543,\"title\":\":debugger.start loses module location after doing a Code.load_file\",\"user\":{\"login\":\"vans163\",\"id\":3028982,\"avatar_url\":\"https://avatars.githubusercontent.com/u/3028982?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/vans163\",\"html_url\":\"https://github.com/vans163\",\"followers_url\":\"https://api.github.com/users/vans163/followers\",\"following_url\":\"https://api.github.com/users/vans163/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/vans163/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/vans163/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/vans163/subscriptions\",\"organizations_url\":\"https://api.github.com/users/vans163/orgs\",\"repos_url\":\"https://api.github.com/users/vans163/repos\",\"events_url\":\"https://api.github.com/users/vans163/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/vans163/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir\",\"name\":\"App:Elixir\",\"color\":\"CCCCCC\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"e10c02\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Note:Erlang%20bug\",\"name\":\"Note:Erlang bug\",\"color\":\"d4c5f9\"}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":3,\"created_at\":\"2016-04-22T00:37:17Z\",\"updated_at\":\"2016-05-23T02:58:25Z\",\"closed_at\":null,\"body\":\"Related to this pull:  \\r\\nhttps://github.com/erlang/otp/pull/977\\r\\n\\r\\nNot sure if this belongs Erlang or Elixir, but you are only affected by this bug if you are using Elixir.\\r\\n\\r\\nThe debugger module was patched recently to find the modules, but doing a Code.load_file to hotload code breaks the heuristic, and you need to restart the whole app in order for it to find the module.\\r\\n\\r\\n```\\r\\n:debugger.start\\r\\n:int.ni(MyModule)\\r\\n{:module, MyModule}\\r\\n\\r\\nCode.load_file mymodule.ex\\r\\n:int.ni(MyModule)\\r\\n** Invalid beam file or no abstract code: 'Elixir.MyModule'\\r\\n:error\\r\\n```\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4467\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4467/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4467/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4467/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/4467\",\"id\":145332670,\"number\":4467,\"title\":\"Test translates :proc_lib crashes with neighbour with name (Logger.TranslatorTest)\",\"user\":{\"login\":\"peteygao\",\"id\":2184561,\"avatar_url\":\"https://avatars.githubusercontent.com/u/2184561?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/peteygao\",\"html_url\":\"https://github.com/peteygao\",\"followers_url\":\"https://api.github.com/users/peteygao/followers\",\"following_url\":\"https://api.github.com/users/peteygao/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/peteygao/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/peteygao/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/peteygao/subscriptions\",\"organizations_url\":\"https://api.github.com/users/peteygao/orgs\",\"repos_url\":\"https://api.github.com/users/peteygao/repos\",\"events_url\":\"https://api.github.com/users/peteygao/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/peteygao/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Logger\",\"name\":\"App:Logger\",\"color\":\"cccccc\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"e10c02\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Level:Intermediate\",\"name\":\"Level:Intermediate\",\"color\":\"fad8c7\"}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":3,\"created_at\":\"2016-04-02T03:59:39Z\",\"updated_at\":\"2016-04-26T17:18:07Z\",\"closed_at\":null,\"body\":\"### Stack trace\\r\\n\\r\\n```\\r\\nRandomized with seed 88794\\r\\n==> logger (exunit)\\r\\n.............................................................................\\r\\n\\r\\n  1) test translates :proc_lib crashes with neighbour with name (Logger.TranslatorTest)\\r\\n     test/logger/translator_test.exs:320\\r\\n     Assertion with =~ failed\\r\\n     code: capture_log(:info, fn ->\\r\\n             ref = Process.monitor(pid)\\r\\n             send(pid, :message)\\r\\n             send(pid, :go)\\r\\n             receive() do\\r\\n               {:DOWN, ^ref, _, _, _} ->\\r\\n                 :ok\\r\\n             end\\r\\n           end) =~ ~r\\\"Ancestors: \\\\\\\\[#PID<\\\\\\\\d+\\\\\\\\.\\\\\\\\d+\\\\\\\\.\\\\\\\\d+>\\\\\\\\]\\\\nNeighbours:\\\\n    Logger.TranslatorTest \\\\\\\\(#PID<\\\\\\\\d+\\\\\\\\.\\\\\\\\d+\\\\\\\\.\\\\\\\\d+>\\\\\\\\)\\\\n        Initial Call: :timer.sleep\\r\\n/1\\\\n        Current Call: :timer.sleep/1\\\\n        Ancestors: \\\\\\\\[#PID<\\\\\\\\d+\\\\\\\\.\\\\\\\\d+\\\\\\\\.\\\\\\\\d+>, #PID<\\\\\\\\d+\\\\\\\\.\\\\\\\\d+\\\\\\\\.\\\\\\\\d+>\\\\\\\\]\\\\n\\\"\\r\\n     lhs:  \\\"\\\\n20:36:38.811 [error] Task #PID<0.387.0> started from #PID<0.386.0> terminating\\\\n** (RuntimeError) oops\\\\n    test/logger/translator_test.exs:324: anonymous f\\r\\nn/1 in Logger.TranslatorTest.test translates :proc_lib crashes with neighbour with name/1\\\\n    (elixir) lib/task/supervised.ex:89: Task.Supervised.do_apply/2\\\\n    (stdlib\\r\\n) proc_lib.erl:240: :proc_lib.init_p_do_apply/3\\\\nFunction: &Logger.TranslatorTest.sub_task/2\\\\n    Args: [#PID<0.386.0>, #Function<26.21255176/1 in Logger.TranslatorTest.t\\r\\nest translates :proc_lib crashes with neighbour with name/1>]\\\\n\\\\n20:36:38.814 [error] Process #PID<0.387.0> terminating\\\\n** (exit) an exception was raised:\\\\n    ** (Runti\\r\\nmeError) oops\\\\n        test/logger/translator_test.exs:324: anonymous fn/1 in Logger.TranslatorTest.test translates :proc_lib crashes with neighbour with name/1\\\\n\\r\\n(elixir) lib/task/supervised.ex:89: Task.Supervised.do_apply/2\\\\n        (stdlib) proc_lib.erl:240: :proc_lib.init_p_do_apply/3\\\\n    (elixir) lib/task/supervised.ex:120: T\\r\\nask.Supervised.exit/4\\\\n    (stdlib) proc_lib.erl:240: :proc_lib.init_p_do_apply/3\\\\nInitial Call: Logger.TranslatorTest.sub_task/2\\\\nAncestors: [#PID<0.386.0>]\\\\nNeighbours:\\r\\n\\\\n    Logger.TranslatorTest (#PID<0.389.0>)\\\\n        Initial Call: :proc_lib.init_p/5\\\\n        Current Call: :proc_lib.init_p/5\\\\n        Ancestors: []\\\\n\\\"\\r\\n     rhs:  ~r/Ancestors: \\\\[#PID<\\\\d+\\\\.\\\\d+\\\\.\\\\d+>\\\\]\\\\nNeighbours:\\\\n    Logger.TranslatorTest \\\\(#PID<\\\\d+\\\\.\\\\d+\\\\.\\\\d+>\\\\)\\\\n        Initial Call: :timer.sleep\\\\/1\\\\n        Current C\\r\\nall: :timer.sleep\\\\/1\\\\n        Ancestors: \\\\[#PID<\\\\d+\\\\.\\\\d+\\\\.\\\\d+>, #PID<\\\\d+\\\\.\\\\d+\\\\.\\\\d+>\\\\]\\\\n/\\r\\n     stacktrace:\\r\\n       test/logger/translator_test.exs:327\\r\\n\\r\\n..........\\r\\n\\r\\nFinished in 7.4 seconds (5.7s on load, 1.6s on tests)\\r\\n88 tests, 1 failure\\r\\n\\r\\nRandomized with seed 289732\\r\\nMakefile:95: recipe for target 'test_logger' failed\\r\\nmake: *** [test_logger] Error 1\\r\\n```\\r\\n\\r\\n### Environment\\r\\n\\r\\n* Elixir version (elixir -v): `master` branch, commit `9cbbf8a5803210b4fd40a867c3e26b79b20da8e6`\\r\\n* Operating system: `Linux 4.1.7-v7+ #817 SMP PREEMPT Sat Sep 19 15:32:00 BST 2015 armv7l GNU/Linux` This is a Raspberry Pi 2 system (CPU is an Armv7, I believe)\\r\\n\\r\\n### Current behavior\\r\\n\\r\\nRepro steps:\\r\\n```\\r\\n$ git clone https://github.com/elixir-lang/elixir.git\\r\\n$ cd elixir\\r\\n$ make clean test\\r\\n# The above test fails.\\r\\n```\\r\\n\\r\\n### Expected behavior\\r\\n\\r\\nTests should pass and Elixir builds.\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4465\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4465/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4465/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4465/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/4465\",\"id\":145221841,\"number\":4465,\"title\":\"warning msg misdirects\",\"user\":{\"login\":\"frpaulas\",\"id\":194559,\"avatar_url\":\"https://avatars.githubusercontent.com/u/194559?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/frpaulas\",\"html_url\":\"https://github.com/frpaulas\",\"followers_url\":\"https://api.github.com/users/frpaulas/followers\",\"following_url\":\"https://api.github.com/users/frpaulas/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/frpaulas/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/frpaulas/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/frpaulas/subscriptions\",\"organizations_url\":\"https://api.github.com/users/frpaulas/orgs\",\"repos_url\":\"https://api.github.com/users/frpaulas/repos\",\"events_url\":\"https://api.github.com/users/frpaulas/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/frpaulas/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Mix\",\"name\":\"App:Mix\",\"color\":\"CCCCCC\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"e10c02\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Level:Advanced\",\"name\":\"Level:Advanced\",\"color\":\"f7c6c7\"}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":18,\"created_at\":\"2016-04-01T16:16:33Z\",\"updated_at\":\"2016-05-13T07:43:29Z\",\"closed_at\":null,\"body\":\"### Environment\\r\\n\\r\\n* Elixir version (elixir -v): 1.2.0\\r\\n* Operating system: os x 10.11.4\\r\\n\\r\\n### Current behavior\\r\\niex -S mix gives the following warning\\r\\n\\r\\n> mix.exs:12: warning: undefined module attribute @version, please remove access to @version or explicitly set it before access\\r\\n\\r\\nfor mix.exs at https://gist.github.com/frpaulas/771d87084bad800a56442f4360467556\\r\\nwhen the issue is:  @version is undefined in deps/mock/mix.exs\\r\\n\\r\\ndefining @version in deps/mock/mix.exs clears the warning\\r\\n\\r\\n### Expected behavior\\r\\n\\r\\nIt would be good if the warning said something like \\\"deps/mock/exs:12 warning etc.\\\"\\r\\n\\r\\nThanks for the help\\r\\npaul\\r\\n\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4451\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4451/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4451/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4451/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/4451\",\"id\":144582425,\"number\":4451,\"title\":\"Allow matching on ExUnit setup/setup_all blocks\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:ExUnit\",\"name\":\"App:ExUnit\",\"color\":\"CCCCCC\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Note:Discussion\",\"name\":\"Note:Discussion\",\"color\":\"bfdadc\"}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":21,\"created_at\":\"2016-03-30T13:05:32Z\",\"updated_at\":\"2016-05-13T07:54:30Z\",\"closed_at\":null,\"body\":\"For example:\\r\\n\\r\\n    setup %{login_as: username} do\\r\\n      # ...\\r\\n    end\\r\\n\\r\\nwill only be invoked if the context as the given key. We should also support guard clauses:\\r\\n\\r\\n    setup %{login_as: username} when is_binary(username) do\\r\\n      # ...\\r\\n    end\\r\\n\\r\\n/cc @chrismccord\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4171\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4171/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4171/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4171/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/4171\",\"id\":125480879,\"number\":4171,\"title\":\"Suggesting the correct patterns to match\",\"user\":{\"login\":\"aesmail\",\"id\":602354,\"avatar_url\":\"https://avatars.githubusercontent.com/u/602354?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/aesmail\",\"html_url\":\"https://github.com/aesmail\",\"followers_url\":\"https://api.github.com/users/aesmail/followers\",\"following_url\":\"https://api.github.com/users/aesmail/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/aesmail/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/aesmail/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/aesmail/subscriptions\",\"organizations_url\":\"https://api.github.com/users/aesmail/orgs\",\"repos_url\":\"https://api.github.com/users/aesmail/repos\",\"events_url\":\"https://api.github.com/users/aesmail/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/aesmail/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir\",\"name\":\"App:Elixir\",\"color\":\"CCCCCC\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Feature\",\"name\":\"Kind:Feature\",\"color\":\"0052cc\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Level:Advanced\",\"name\":\"Level:Advanced\",\"color\":\"f7c6c7\"}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":6,\"created_at\":\"2016-01-07T20:44:36Z\",\"updated_at\":\"2016-02-29T00:08:23Z\",\"closed_at\":null,\"body\":\"Hello,\\r\\nThis is something that would have saved me personally a lot of time.\\r\\nFor function headers, wouldn't it be extremely useful if the compiler/parser suggested the intended pattern that the code was trying to match when raising a `FunctionClauseError`?\\r\\n\\r\\nFor example, I wrote the following function:\\r\\n`def render(\\\"template.json\\\", %{group: group})`\\r\\n\\r\\nI believed (wrongly) that the second argument was going to be %{group: some_group_variable}.\\r\\nEspecially that I did have other related functions that worked fine with this pattern.\\r\\nI kept getting a FunctionClauseError and I didn't know why (my fault eventually, of course).\\r\\n\\r\\nSecond scenario, I misspelled an argument in a pattern. The function was (phoenix):\\r\\n`def video_path(conn, :update, ...)`\\r\\n\\r\\nAnd I called:\\r\\n`video_path(conn, :udpate, ...)`\\r\\n\\r\\nI went crazy here. I saw the typo in its correct form until I caught it after a few hours after I had some \\\"away\\\" time.\\r\\n\\r\\n\\r\\nI think it would be very valuable to do something like:\\r\\n```\\r\\n** (FunctionClauseError) no function clause matching in Rumbl.Router.Helpers.video_path/4\\r\\n** Provided pattern: video_path(conn, :udpate)\\r\\n** Valid patterns:\\r\\n        video_path(&1, :index)\\r\\n        video_path(&1, :update)\\r\\n        video_path(&1, :delete)\\r\\n```\\r\\nOr something similar to this.\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4162\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4162/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4162/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4162/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/4162\",\"id\":125033284,\"number\":4162,\"title\":\"Collect requirements in Mix.Dep\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Mix\",\"name\":\"App:Mix\",\"color\":\"CCCCCC\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Enhancement\",\"name\":\"Kind:Enhancement\",\"color\":\"009800\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Level:Advanced\",\"name\":\"Level:Advanced\",\"color\":\"f7c6c7\"}],\"state\":\"open\",\"locked\":false,\"assignee\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"milestone\":{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/17\",\"html_url\":\"https://github.com/elixir-lang/elixir/milestones/v1.3.0\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/17/labels\",\"id\":1442016,\"number\":17,\"title\":\"v1.3.0\",\"description\":\"\",\"creator\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":9,\"closed_issues\":26,\"state\":\"open\",\"created_at\":\"2015-12-03T12:25:01Z\",\"updated_at\":\"2016-05-22T21:51:29Z\",\"due_on\":null,\"closed_at\":null},\"comments\":0,\"created_at\":\"2016-01-05T19:26:40Z\",\"updated_at\":\"2016-05-22T21:33:41Z\",\"closed_at\":null,\"body\":\"Today hex.pm has a lot of code only to collect the different constraints that can come as part of Mix.Dep. We should collect those ourselves so Hex does not have to reimplement part of Mix resolution algorithm. See: \\r\\n\\r\\n* https://github.com/hexpm/hex/commit/329ba49f8f670b7e0065998299cc0b352b1fc3a7\\r\\n* https://github.com/hexpm/hex/commit/8e03cf2013e8b5638c76483bb7b56747ef23ca38\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4161\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4161/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4161/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4161/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/4161\",\"id\":125008413,\"number\":4161,\"title\":\"Improve ExUnit.AssertionError exception messages\",\"user\":{\"login\":\"fishcakez\",\"id\":2001229,\"avatar_url\":\"https://avatars.githubusercontent.com/u/2001229?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/fishcakez\",\"html_url\":\"https://github.com/fishcakez\",\"followers_url\":\"https://api.github.com/users/fishcakez/followers\",\"following_url\":\"https://api.github.com/users/fishcakez/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/fishcakez/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/fishcakez/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/fishcakez/subscriptions\",\"organizations_url\":\"https://api.github.com/users/fishcakez/orgs\",\"repos_url\":\"https://api.github.com/users/fishcakez/repos\",\"events_url\":\"https://api.github.com/users/fishcakez/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/fishcakez/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:ExUnit\",\"name\":\"App:ExUnit\",\"color\":\"CCCCCC\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Enhancement\",\"name\":\"Kind:Enhancement\",\"color\":\"009800\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Level:Starter\",\"name\":\"Level:Starter\",\"color\":\"fef2c0\"}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":30,\"created_at\":\"2016-01-05T17:07:47Z\",\"updated_at\":\"2016-05-21T19:32:46Z\",\"closed_at\":null,\"body\":\"ExUnit prints a very nice exception message when it rescues the assertion. However if the assertion is raised in another process the displayed error is sometimes lacking because the raw exception message is used and it does not contain much information.\\r\\n\\r\\nAn example from ecto:\\r\\n```\\r\\n** (EXIT from #PID<0.467.0>) an exception was raised:\\r\\n         ** (ExUnit.AssertionError) match (=) failed\\r\\n             integration_test/pg/deadlock_test.exs:40: Ecto.Integration.DeadlockTest.acquire_deadlock/2\\r\\n             (ecto) lib/ecto/adapters/sql.ex:489: anonymous fn/3 in Ecto.Adapters.SQL.do_transaction/3\\r\\n             (db_connection) lib/db_connection.ex:1162: DBConnection.transaction_run/3\\r\\n             (db_connection) lib/db_connection.ex:1084: DBConnection.run_begin/3\\r\\n             (elixir) lib/task/supervised.ex:89: Task.Supervised.do_apply/2\\r\\n             (elixir) lib/task/supervised.ex:40: Task.Supervised.reply/5\\r\\n             (stdlib) proc_lib.erl:240: :proc_lib.init_p_do_apply/3\\r\\n```\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4082\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4082/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4082/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4082/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/4082\",\"id\":122685260,\"number\":4082,\"title\":\"Add make compiler\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Mix\",\"name\":\"App:Mix\",\"color\":\"CCCCCC\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Feature\",\"name\":\"Kind:Feature\",\"color\":\"0052cc\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Level:Intermediate\",\"name\":\"Level:Intermediate\",\"color\":\"fad8c7\"}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"milestone\":{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/17\",\"html_url\":\"https://github.com/elixir-lang/elixir/milestones/v1.3.0\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/17/labels\",\"id\":1442016,\"number\":17,\"title\":\"v1.3.0\",\"description\":\"\",\"creator\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":9,\"closed_issues\":26,\"state\":\"open\",\"created_at\":\"2015-12-03T12:25:01Z\",\"updated_at\":\"2016-05-22T21:51:29Z\",\"due_on\":null,\"closed_at\":null},\"comments\":21,\"created_at\":\"2015-12-17T08:20:09Z\",\"updated_at\":\"2016-05-23T05:41:55Z\",\"closed_at\":null,\"body\":\"The goal is to make it easy for those who have to compile native dependencies.\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4042\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4042/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4042/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4042/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/4042\",\"id\":120159676,\"number\":4042,\"title\":\"Enable Rebar 3 support by default\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Mix\",\"name\":\"App:Mix\",\"color\":\"CCCCCC\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Level:Advanced\",\"name\":\"Level:Advanced\",\"color\":\"f7c6c7\"}],\"state\":\"open\",\"locked\":false,\"assignee\":{\"login\":\"ericmj\",\"id\":316890,\"avatar_url\":\"https://avatars.githubusercontent.com/u/316890?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/ericmj\",\"html_url\":\"https://github.com/ericmj\",\"followers_url\":\"https://api.github.com/users/ericmj/followers\",\"following_url\":\"https://api.github.com/users/ericmj/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/ericmj/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/ericmj/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/ericmj/subscriptions\",\"organizations_url\":\"https://api.github.com/users/ericmj/orgs\",\"repos_url\":\"https://api.github.com/users/ericmj/repos\",\"events_url\":\"https://api.github.com/users/ericmj/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/ericmj/received_events\",\"type\":\"User\",\"site_admin\":false},\"milestone\":{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/18\",\"html_url\":\"https://github.com/elixir-lang/elixir/milestones/v1.4.0\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/18/labels\",\"id\":1651986,\"number\":18,\"title\":\"v1.4.0\",\"description\":null,\"creator\":{\"login\":\"lexmag\",\"id\":248290,\"avatar_url\":\"https://avatars.githubusercontent.com/u/248290?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/lexmag\",\"html_url\":\"https://github.com/lexmag\",\"followers_url\":\"https://api.github.com/users/lexmag/followers\",\"following_url\":\"https://api.github.com/users/lexmag/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/lexmag/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/lexmag/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/lexmag/subscriptions\",\"organizations_url\":\"https://api.github.com/users/lexmag/orgs\",\"repos_url\":\"https://api.github.com/users/lexmag/repos\",\"events_url\":\"https://api.github.com/users/lexmag/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/lexmag/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":3,\"closed_issues\":0,\"state\":\"open\",\"created_at\":\"2016-03-17T18:33:25Z\",\"updated_at\":\"2016-05-17T12:39:57Z\",\"due_on\":null,\"closed_at\":null},\"comments\":12,\"created_at\":\"2015-12-03T12:24:45Z\",\"updated_at\":\"2016-05-18T14:34:14Z\",\"closed_at\":null,\"body\":\"Before we make this work, we need to find a way for Rebar 3 to not prompt for registry updates repeatedly.\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4037\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4037/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4037/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4037/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/pull/4037\",\"id\":120070640,\"number\":4037,\"title\":\"Adds support for optionalcallback and optionalmacrocallback\",\"user\":{\"login\":\"stevedomin\",\"id\":512246,\"avatar_url\":\"https://avatars.githubusercontent.com/u/512246?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/stevedomin\",\"html_url\":\"https://github.com/stevedomin\",\"followers_url\":\"https://api.github.com/users/stevedomin/followers\",\"following_url\":\"https://api.github.com/users/stevedomin/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/stevedomin/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/stevedomin/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/stevedomin/subscriptions\",\"organizations_url\":\"https://api.github.com/users/stevedomin/orgs\",\"repos_url\":\"https://api.github.com/users/stevedomin/repos\",\"events_url\":\"https://api.github.com/users/stevedomin/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/stevedomin/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"milestone\":{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/17\",\"html_url\":\"https://github.com/elixir-lang/elixir/milestones/v1.3.0\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/17/labels\",\"id\":1442016,\"number\":17,\"title\":\"v1.3.0\",\"description\":\"\",\"creator\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":9,\"closed_issues\":26,\"state\":\"open\",\"created_at\":\"2015-12-03T12:25:01Z\",\"updated_at\":\"2016-05-22T21:51:29Z\",\"due_on\":null,\"closed_at\":null},\"comments\":30,\"created_at\":\"2015-12-03T00:57:04Z\",\"updated_at\":\"2016-05-22T21:36:45Z\",\"closed_at\":null,\"pull_request\":{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/pulls/4037\",\"html_url\":\"https://github.com/elixir-lang/elixir/pull/4037\",\"diff_url\":\"https://github.com/elixir-lang/elixir/pull/4037.diff\",\"patch_url\":\"https://github.com/elixir-lang/elixir/pull/4037.patch\"},\"body\":\"The optionalcallback or optionalmacrocallback attribute also defines the\\r\\nErlang optional_callbacks attribute.\\r\\n\\r\\nIf a (macro)callback has been defined as optional(macro)callback and\\r\\n(macro)callback we emit a warning and defines the optional_callbacks\\r\\nattribute.\\r\\n\\r\\nhttp://www.erlang.org/doc/design_principles/spec_proc.html#id74952\\r\\n\\r\\nFixes https://github.com/elixir-lang/elixir/issues/3980\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4009\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4009/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4009/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/4009/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/4009\",\"id\":119322477,\"number\":4009,\"title\":\"Provide different accessors in the Access module\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir\",\"name\":\"App:Elixir\",\"color\":\"CCCCCC\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Feature\",\"name\":\"Kind:Feature\",\"color\":\"0052cc\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Level:Advanced\",\"name\":\"Level:Advanced\",\"color\":\"f7c6c7\"}],\"state\":\"open\",\"locked\":false,\"assignee\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"milestone\":{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/17\",\"html_url\":\"https://github.com/elixir-lang/elixir/milestones/v1.3.0\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/17/labels\",\"id\":1442016,\"number\":17,\"title\":\"v1.3.0\",\"description\":\"\",\"creator\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":9,\"closed_issues\":26,\"state\":\"open\",\"created_at\":\"2015-12-03T12:25:01Z\",\"updated_at\":\"2016-05-22T21:51:29Z\",\"due_on\":null,\"closed_at\":null},\"comments\":3,\"created_at\":\"2015-11-28T22:36:21Z\",\"updated_at\":\"2016-05-13T08:06:57Z\",\"closed_at\":null,\"body\":\"The goal is to provide accessors to be used alongside Kernel.put_in and friends. For example:\\r\\n\\r\\n```elixir\\r\\nput_in sample[:foo][:bar], :baz\\r\\n```\\r\\n\\r\\nCan be thought as a shortcut to:\\r\\n\\r\\n```elixir\\r\\nput_in sample, [Access.key(:foo), Access.key(:bar)], :baz\\r\\n```\\r\\n\\r\\nWhere `Access.key(:foo)` will return a function as described by `Kernel.get_and_update_in`. Similar would exist for structs:\\r\\n\\r\\n```elixir\\r\\nput_in sample.foo.bar, :baz\\r\\n```\\r\\n\\r\\nis equivalent to:\\r\\n\\r\\n```elixir\\r\\nput_in sample, [Access.field(:foo), Access.field(:bar)], :baz\\r\\n```\\r\\n\\r\\nFor now, we will also provide `all/0` and `at/1` for lists and `elem/1` for tuples. The question is the naming convention for those functions. For example, we could prefix most of them by `by_`: `by_key`, `by_elem` and `by_field`, although it wouldn't work for `all/0` and `at/1`. Alternatively, we can drop the `by_` prefix, although it could be confusing if mixed with the existing `fetch/2`, `get/3` and friends.\\r\\n\\r\\nThoughts?\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3980\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3980/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3980/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3980/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/3980\",\"id\":118377090,\"number\":3980,\"title\":\"Support optional callbacks\",\"user\":{\"login\":\"fishcakez\",\"id\":2001229,\"avatar_url\":\"https://avatars.githubusercontent.com/u/2001229?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/fishcakez\",\"html_url\":\"https://github.com/fishcakez\",\"followers_url\":\"https://api.github.com/users/fishcakez/followers\",\"following_url\":\"https://api.github.com/users/fishcakez/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/fishcakez/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/fishcakez/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/fishcakez/subscriptions\",\"organizations_url\":\"https://api.github.com/users/fishcakez/orgs\",\"repos_url\":\"https://api.github.com/users/fishcakez/repos\",\"events_url\":\"https://api.github.com/users/fishcakez/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/fishcakez/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir\",\"name\":\"App:Elixir\",\"color\":\"CCCCCC\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Enhancement\",\"name\":\"Kind:Enhancement\",\"color\":\"009800\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Level:Advanced\",\"name\":\"Level:Advanced\",\"color\":\"f7c6c7\"}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"milestone\":{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/17\",\"html_url\":\"https://github.com/elixir-lang/elixir/milestones/v1.3.0\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/17/labels\",\"id\":1442016,\"number\":17,\"title\":\"v1.3.0\",\"description\":\"\",\"creator\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":9,\"closed_issues\":26,\"state\":\"open\",\"created_at\":\"2015-12-03T12:25:01Z\",\"updated_at\":\"2016-05-22T21:51:29Z\",\"due_on\":null,\"closed_at\":null},\"comments\":2,\"created_at\":\"2015-11-23T13:09:00Z\",\"updated_at\":\"2016-05-13T08:08:56Z\",\"closed_at\":null,\"body\":\"See http://www.erlang.org/doc/design_principles/spec_proc.html#id74952 and `-optional_callbacks`\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3847\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3847/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3847/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3847/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/3847\",\"id\":110131550,\"number\":3847,\"title\":\"excoveralls misses secondary default parameters in multi-line function parameter list\",\"user\":{\"login\":\"sunaku\",\"id\":9863,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9863?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/sunaku\",\"html_url\":\"https://github.com/sunaku\",\"followers_url\":\"https://api.github.com/users/sunaku/followers\",\"following_url\":\"https://api.github.com/users/sunaku/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/sunaku/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/sunaku/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/sunaku/subscriptions\",\"organizations_url\":\"https://api.github.com/users/sunaku/orgs\",\"repos_url\":\"https://api.github.com/users/sunaku/repos\",\"events_url\":\"https://api.github.com/users/sunaku/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/sunaku/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir\",\"name\":\"App:Elixir\",\"color\":\"CCCCCC\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"e10c02\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Level:Advanced\",\"name\":\"Level:Advanced\",\"color\":\"f7c6c7\"}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":14,\"created_at\":\"2015-10-07T00:46:34Z\",\"updated_at\":\"2016-05-17T15:37:37Z\",\"closed_at\":null,\"body\":\"Hello,\\r\\n\\r\\nI'm using Elixir 1.1.1 with Erlang 18.1 and ExCoveralls 0.3.11 under 64-bit Linux.\\r\\n\\r\\nI get the following coverage map when I run the example code snippets below. :scream:\\r\\n\\r\\n![selection_138](https://cloud.githubusercontent.com/assets/9863/10326575/c3c83b52-6c51-11e5-80e9-04b5ecfcc55c.png)\\r\\n\\r\\nMy expectation is that the secondary default parameters should be covered because all of their corresponding functions were called by the test case.\\r\\n\\r\\nThanks for your consideration. :sweat_smile:\\r\\n\\r\\n## lib/my_coveralls.ex\\r\\n\\r\\n```elixir\\r\\ndefmodule MyCoveralls do\\r\\n  def arg0 do\\r\\n    :ok\\r\\n  end\\r\\n\\r\\n  def arg1(a1 \\\\\\\\ 1) do\\r\\n    :ok\\r\\n  end\\r\\n\\r\\n  def arg2(a1 \\\\\\\\ 1,\\r\\n           a2 \\\\\\\\ 2) do\\r\\n    :ok\\r\\n  end\\r\\n\\r\\n  def arg3(a1 \\\\\\\\ 1,\\r\\n           a2 \\\\\\\\ 2,\\r\\n           a3 \\\\\\\\ 3) do\\r\\n    :ok\\r\\n  end\\r\\nend\\r\\n```\\r\\n\\r\\n## test/my_coveralls_test.exs\\r\\n\\r\\n```elixir\\r\\ndefmodule MyCoverallsTest do\\r\\n  use ExUnit.Case\\r\\n\\r\\n  test \\\"method with 0 default arguments\\\" do\\r\\n    assert MyCoveralls.arg0 == :ok\\r\\n  end\\r\\n\\r\\n  test \\\"method with 1 default arguments\\\" do\\r\\n    assert MyCoveralls.arg1 == :ok\\r\\n  end\\r\\n\\r\\n  test \\\"method with 2 default arguments\\\" do\\r\\n    assert MyCoveralls.arg2 == :ok\\r\\n  end\\r\\n\\r\\n  test \\\"method with 3 default arguments\\\" do\\r\\n    assert MyCoveralls.arg3 == :ok\\r\\n  end\\r\\nend\\r\\n```\\r\\n\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3657\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3657/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3657/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3657/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/3657\",\"id\":104495046,\"number\":3657,\"title\":\"Enforce fields by default when creating exceptions\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir\",\"name\":\"App:Elixir\",\"color\":\"CCCCCC\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Enhancement\",\"name\":\"Kind:Enhancement\",\"color\":\"009800\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Level:Intermediate\",\"name\":\"Level:Intermediate\",\"color\":\"fad8c7\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Note:Discussion\",\"name\":\"Note:Discussion\",\"color\":\"bfdadc\"}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"milestone\":{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/17\",\"html_url\":\"https://github.com/elixir-lang/elixir/milestones/v1.3.0\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/17/labels\",\"id\":1442016,\"number\":17,\"title\":\"v1.3.0\",\"description\":\"\",\"creator\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":9,\"closed_issues\":26,\"state\":\"open\",\"created_at\":\"2015-12-03T12:25:01Z\",\"updated_at\":\"2016-05-22T21:51:29Z\",\"due_on\":null,\"closed_at\":null},\"comments\":6,\"created_at\":\"2015-09-02T14:36:00Z\",\"updated_at\":\"2016-05-22T09:26:10Z\",\"closed_at\":null,\"body\":\"Today, if I define:\\r\\n\\r\\n    defmodule FooError do\\r\\n      defexception [:message]\\r\\n    end\\r\\n\\r\\nAnd I call it as:\\r\\n\\r\\n    # Notice the typo\\r\\n    raise FooError, mesage: \\\"foo bar\\\"\\r\\n\\r\\nIt will raise the exception as usual and fail when showing the error message. We must change the default behaviour when raising exception to validate all fields. Users can customize by implementing `def exception/1` in their code.\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3634\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3634/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3634/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3634/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/3634\",\"id\":103882667,\"number\":3634,\"title\":\"Error on umbrella dependency cycles\",\"user\":{\"login\":\"ericmj\",\"id\":316890,\"avatar_url\":\"https://avatars.githubusercontent.com/u/316890?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/ericmj\",\"html_url\":\"https://github.com/ericmj\",\"followers_url\":\"https://api.github.com/users/ericmj/followers\",\"following_url\":\"https://api.github.com/users/ericmj/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/ericmj/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/ericmj/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/ericmj/subscriptions\",\"organizations_url\":\"https://api.github.com/users/ericmj/orgs\",\"repos_url\":\"https://api.github.com/users/ericmj/repos\",\"events_url\":\"https://api.github.com/users/ericmj/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/ericmj/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir\",\"name\":\"App:Elixir\",\"color\":\"CCCCCC\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"e10c02\"}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"milestone\":{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/17\",\"html_url\":\"https://github.com/elixir-lang/elixir/milestones/v1.3.0\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/17/labels\",\"id\":1442016,\"number\":17,\"title\":\"v1.3.0\",\"description\":\"\",\"creator\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":9,\"closed_issues\":26,\"state\":\"open\",\"created_at\":\"2015-12-03T12:25:01Z\",\"updated_at\":\"2016-05-22T21:51:29Z\",\"due_on\":null,\"closed_at\":null},\"comments\":2,\"created_at\":\"2015-08-29T21:04:15Z\",\"updated_at\":\"2016-05-22T22:01:52Z\",\"closed_at\":null,\"body\":\"Dependency cycles in umbrella apps will cause mix to infinitely recurse instead of erroring.\\r\\n\\r\\nExample: http://pastebin.com/fiRTStMV\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3517\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3517/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3517/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3517/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/pull/3517\",\"id\":96193799,\"number\":3517,\"title\":\"[WIP] Warn if variable is used as function call\",\"user\":{\"login\":\"lexmag\",\"id\":248290,\"avatar_url\":\"https://avatars.githubusercontent.com/u/248290?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/lexmag\",\"html_url\":\"https://github.com/lexmag\",\"followers_url\":\"https://api.github.com/users/lexmag/followers\",\"following_url\":\"https://api.github.com/users/lexmag/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/lexmag/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/lexmag/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/lexmag/subscriptions\",\"organizations_url\":\"https://api.github.com/users/lexmag/orgs\",\"repos_url\":\"https://api.github.com/users/lexmag/repos\",\"events_url\":\"https://api.github.com/users/lexmag/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/lexmag/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"milestone\":{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/18\",\"html_url\":\"https://github.com/elixir-lang/elixir/milestones/v1.4.0\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/18/labels\",\"id\":1651986,\"number\":18,\"title\":\"v1.4.0\",\"description\":null,\"creator\":{\"login\":\"lexmag\",\"id\":248290,\"avatar_url\":\"https://avatars.githubusercontent.com/u/248290?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/lexmag\",\"html_url\":\"https://github.com/lexmag\",\"followers_url\":\"https://api.github.com/users/lexmag/followers\",\"following_url\":\"https://api.github.com/users/lexmag/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/lexmag/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/lexmag/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/lexmag/subscriptions\",\"organizations_url\":\"https://api.github.com/users/lexmag/orgs\",\"repos_url\":\"https://api.github.com/users/lexmag/repos\",\"events_url\":\"https://api.github.com/users/lexmag/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/lexmag/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":3,\"closed_issues\":0,\"state\":\"open\",\"created_at\":\"2016-03-17T18:33:25Z\",\"updated_at\":\"2016-05-17T12:39:57Z\",\"due_on\":null,\"closed_at\":null},\"comments\":2,\"created_at\":\"2015-07-21T00:06:17Z\",\"updated_at\":\"2016-03-17T18:33:25Z\",\"closed_at\":null,\"pull_request\":{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/pulls/3517\",\"html_url\":\"https://github.com/elixir-lang/elixir/pull/3517\",\"diff_url\":\"https://github.com/elixir-lang/elixir/pull/3517.diff\",\"patch_url\":\"https://github.com/elixir-lang/elixir/pull/3517.patch\"},\"body\":\"Closes #3268.\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3328\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3328/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3328/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3328/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/3328\",\"id\":76385852,\"number\":3328,\"title\":\"Support delayed evaluation of code in .iex.exs\",\"user\":{\"login\":\"alco\",\"id\":207748,\"avatar_url\":\"https://avatars.githubusercontent.com/u/207748?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/alco\",\"html_url\":\"https://github.com/alco\",\"followers_url\":\"https://api.github.com/users/alco/followers\",\"following_url\":\"https://api.github.com/users/alco/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/alco/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/alco/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/alco/subscriptions\",\"organizations_url\":\"https://api.github.com/users/alco/orgs\",\"repos_url\":\"https://api.github.com/users/alco/repos\",\"events_url\":\"https://api.github.com/users/alco/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/alco/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:IEx\",\"name\":\"App:IEx\",\"color\":\"CCCCCC\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Enhancement\",\"name\":\"Kind:Enhancement\",\"color\":\"009800\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Level:Advanced\",\"name\":\"Level:Advanced\",\"color\":\"f7c6c7\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Note:Discussion\",\"name\":\"Note:Discussion\",\"color\":\"bfdadc\"}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":9,\"created_at\":\"2015-05-14T15:00:37Z\",\"updated_at\":\"2015-08-29T20:57:38Z\",\"closed_at\":null,\"body\":\"It is not currently possible to define a module in .iex.exs and import it at once.\\r\\n\\r\\n```\\r\\ndefmodule MyIExHelpers do\\r\\n  def s do :init.stop end\\r\\nend\\r\\n \\r\\nimport MyIExHelpers\\r\\n \\r\\n \\r\\nλ iex\\r\\n...\\r\\nError while evaluating: /Users/alco/tmp/.iex.exs\\r\\n** (CompileError) .iex.exs:5: module MyIExHelpers is not loaded but was defined. This happens because you are trying to use a module in the same context it is defined. Try defining the module outside the context that requires it.\\r\\n    (elixir) src/elixir_exp.erl:123: :elixir_exp.expand/2\\r\\n    (stdlib) lists.erl:1352: :lists.mapfoldl/3\\r\\n    (stdlib) lists.erl:1353: :lists.mapfoldl/3\\r\\n    (elixir) src/elixir_exp.erl:49: :elixir_exp.expand/2\\r\\n```\\r\\n\\r\\nEven if the module definition is extracted into a separate file, it doesn't work:\\r\\n```\\r\\nCode.require_file \\\"my_iex_helpers.exs\\\"\\r\\nimport MyIExHelpers\\r\\n \\r\\nλ iex\\r\\n...\\r\\nError while evaluating: /Users/alco/tmp/.iex.exs\\r\\n** (CompileError) .iex.exs:2: module MyIExHelpers is not loaded and could not be found\\r\\n    (elixir) src/elixir_exp.erl:123: :elixir_exp.expand/2\\r\\n    (stdlib) lists.erl:1352: :lists.mapfoldl/3\\r\\n    (stdlib) lists.erl:1353: :lists.mapfoldl/3\\r\\n    (elixir) src/elixir_exp.erl:49: :elixir_exp.expand/2\\r\\n```\\r\\n\\r\\nA suggested workaround for this would be the ability to return a quoted expression from .iex.exs which would then be evaluated in the IEx process and therefore in a different context from the one the module has been defined in.\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3268\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3268/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3268/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3268/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/3268\",\"id\":68298937,\"number\":3268,\"title\":\"Warn if variable is used as function call\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir\",\"name\":\"App:Elixir\",\"color\":\"CCCCCC\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Enhancement\",\"name\":\"Kind:Enhancement\",\"color\":\"009800\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Level:Intermediate\",\"name\":\"Level:Intermediate\",\"color\":\"fad8c7\"}],\"state\":\"open\",\"locked\":false,\"assignee\":{\"login\":\"lexmag\",\"id\":248290,\"avatar_url\":\"https://avatars.githubusercontent.com/u/248290?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/lexmag\",\"html_url\":\"https://github.com/lexmag\",\"followers_url\":\"https://api.github.com/users/lexmag/followers\",\"following_url\":\"https://api.github.com/users/lexmag/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/lexmag/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/lexmag/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/lexmag/subscriptions\",\"organizations_url\":\"https://api.github.com/users/lexmag/orgs\",\"repos_url\":\"https://api.github.com/users/lexmag/repos\",\"events_url\":\"https://api.github.com/users/lexmag/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/lexmag/received_events\",\"type\":\"User\",\"site_admin\":false},\"milestone\":{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/18\",\"html_url\":\"https://github.com/elixir-lang/elixir/milestones/v1.4.0\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/18/labels\",\"id\":1651986,\"number\":18,\"title\":\"v1.4.0\",\"description\":null,\"creator\":{\"login\":\"lexmag\",\"id\":248290,\"avatar_url\":\"https://avatars.githubusercontent.com/u/248290?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/lexmag\",\"html_url\":\"https://github.com/lexmag\",\"followers_url\":\"https://api.github.com/users/lexmag/followers\",\"following_url\":\"https://api.github.com/users/lexmag/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/lexmag/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/lexmag/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/lexmag/subscriptions\",\"organizations_url\":\"https://api.github.com/users/lexmag/orgs\",\"repos_url\":\"https://api.github.com/users/lexmag/repos\",\"events_url\":\"https://api.github.com/users/lexmag/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/lexmag/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":3,\"closed_issues\":0,\"state\":\"open\",\"created_at\":\"2016-03-17T18:33:25Z\",\"updated_at\":\"2016-05-17T12:39:57Z\",\"due_on\":null,\"closed_at\":null},\"comments\":20,\"created_at\":\"2015-04-14T08:11:29Z\",\"updated_at\":\"2016-05-18T12:05:04Z\",\"closed_at\":null,\"body\":\"Today, Elixir will transform `var` into `var()` in case `var` does not exist in the user context. I would like to propose those cases to emit a warning from today on.\\r\\n\\r\\nThe downsides is that we add a tiny inconsistency. We can make function call without parens unless it is a function with null-arity. On the other hand, we already have inconsistency in the sense we can only shadow function calls with null-arity by variables. So we are exchanging one by the other.\\r\\n\\r\\nI have bitten by this issue twice today and I believe a warning to be a far compromise.\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3254\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3254/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3254/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3254/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/3254\",\"id\":67001799,\"number\":3254,\"title\":\"Do not allow tuple.foo calls anymore\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir\",\"name\":\"App:Elixir\",\"color\":\"CCCCCC\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Enhancement\",\"name\":\"Kind:Enhancement\",\"color\":\"009800\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Level:Advanced\",\"name\":\"Level:Advanced\",\"color\":\"f7c6c7\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Note:Discussion\",\"name\":\"Note:Discussion\",\"color\":\"bfdadc\"}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":7,\"created_at\":\"2015-04-07T22:12:11Z\",\"updated_at\":\"2015-08-14T19:24:53Z\",\"closed_at\":null,\"body\":\"It is about time to break away from this weird Erlang behaviour. Something to be discussed for 2.0.\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3011\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3011/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3011/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3011/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/3011\",\"id\":53997363,\"number\":3011,\"title\":\"Discuss if we should support monitoring callbacks in agents\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir\",\"name\":\"App:Elixir\",\"color\":\"CCCCCC\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Feature\",\"name\":\"Kind:Feature\",\"color\":\"0052cc\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Level:Advanced\",\"name\":\"Level:Advanced\",\"color\":\"f7c6c7\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Note:Discussion\",\"name\":\"Note:Discussion\",\"color\":\"bfdadc\"}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":6,\"created_at\":\"2015-01-11T17:06:06Z\",\"updated_at\":\"2015-08-10T22:35:37Z\",\"closed_at\":null,\"body\":\"\"}]",
      "headers": {
        "Server": "GitHub.com",
        "Date": "Mon, 23 May 2016 06:30:08 GMT",
        "Content-Type": "application/json; charset=utf-8",
        "Content-Length": "87188",
        "Status": "200 OK",
        "X-RateLimit-Limit": "60",
        "X-RateLimit-Remaining": "51",
        "X-RateLimit-Reset": "1463985631",
        "Cache-Control": "public, max-age=60, s-maxage=60",
        "Vary": "Accept",
        "ETag": "\"4c322b6319a66177ae35feb0e2137327\"",
        "X-GitHub-Media-Type": "github.v3; format=json",
        "Access-Control-Expose-Headers": "ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval",
        "Access-Control-Allow-Origin": "*",
        "Content-Security-Policy": "default-src 'none'",
        "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
        "X-Content-Type-Options": "nosniff",
        "X-Frame-Options": "deny",
        "X-XSS-Protection": "1; mode=block",
        "X-Served-By": "7f48e2f7761567e923121f17538d7a6d",
        "X-GitHub-Request-Id": "5C5A1188:1C0C4:D1A2B61:5742A370"
      },
      "status_code": 200,
      "type": "ok"
    }
  }
]